%:- approach(Y,I), at(X,I), acc(X,Y,Z), 1{indacc(Z,Y1,W)}1,inside(peterstone,W,I), Z!=W.
%:- approach(Y,I), not opendoor(Y,I+1), I<n.
%:- opendoor(Y,I), not gothrough(Y,I+1), I<n.

%:- v_approach(D,V_astep-1), not opendoor(D,V_astep).
%:- v_opendoor(D,V_astep-1), not gothrough(D,V_astep).
%:- v_gothrough(D,V_astep-1), approach(D,V_astep).

%-noop(V_step) :- approach(D,V_step).
%-noop(V_step) :- gothrough(D,V_step).
%-noop(V_step) :- opendoor(D,V_step).
%-noop(V_step) :- askploc(P1,V_step).
%-noop(V_step) :- greet(P,V_step).

%noop(V_step) :- not -noop(V_step).

%v_approach(D,V_astep) :- approach(D,V_astep).
%v_approach(D,V_astep) :- v_approach(D,V_astep-1), noop(V_astep).
%v_opendoor(D,V_astep) :- opendoor(D,V_astep).
%v_opendoor(D,V_astep) :- v_opendoor(D,V_astep-1), noop(V_astep).
%v_gothrough(D,V_astep) :- gothrough(D,V_astep).
%v_gothrough(D,V_astep) :- v_gothrough(D,V_astep-1), noop(V_astep).

faculty(dan).
goal(0,I):- visiting(dan,I).
goal(G,I+1) :- goal(G,I), I<n.
:- not goal(0,n).
